<% singular_name_klass = klass.name.underscore %>
<% plural_name_klass   = singular_name_klass.pluralize %>
<% applying_fast_search = klass.has_fast_search? && defined?(:@search_terms) && !@search_terms.nil? && !@search_terms.empty? %>

<%= round_div_box do %>

  <%= raw index_actions_for(klass) %>

  <h1>
    <%= Gx.t_action("#{ singular_name_klass }.index") %>
    <%= raw "#{ t("words.of") } #{ link_to( @container.full_name, eval("#{@container.class.name.underscore}_path(@container.id)")) }" if @container %>
  </h1>

  <% if applying_fast_search %>
    <%= t('search.fast_searched_fields_header') %>
    <%= @search_fields.collect{|f| Gx.t_attr("#{f.split('.').first.singularize}.#{f.split('.').last}")}.join(', ') %>
  <% end %>

<% end  %>

<%= round_div_box(:padding => false) do %>

  <% if applying_fast_search && !collection.empty? %>
    <%= Gx.highlight_regexp( (render :partial => "shared/collection", :object => collection, :locals => { :klass => klass }), @search_terms, :highlighter => '<span class="highlighted_search_term">\1</span>' ) %>
  <% else %>
    <%= render( :partial => "shared/collection", :object => collection, :locals => { :klass => klass } ) %>
  <% end %>

    <% if will_paginate collection %>
     <div class="paginate">
       <%= page_entries_info collection %>
       <%= will_paginate collection, :container => false  %>
     </div>
   <% end %>

<% end %>

